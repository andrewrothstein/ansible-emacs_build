---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Installing andrewrothstein.gcc_toolbox
  ansible.builtin.include_role:
    name: andrewrothstein.gcc_toolbox
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Installing OS pkgs....
  become: true
  become_user: root
  ansible.builtin.package:
    name: '{{ emacs_build_os_pkgs | default([]) }}'
    state: present

- name: Downloading {{ emacs_build_url }}
  become: true
  become_user: root
  ansible.builtin.get_url:
    url: '{{ emacs_build_url }}'
    dest: '{{ emacs_build_tmp_tgz }}'
    timeout: '{{ emacs_build_timeout_seconds }}'
    mode: '644'

- name: Unarchiving {{ emacs_build_tmp_tgz }}
  become: true
  become_user: root
  ansible.builtin.unarchive:
    remote_src: true
    src: '{{ emacs_build_tmp_tgz }}'
    dest: '{{ emacs_build_parent_src_dir }}'
    creates: '{{ emacs_build_src_dir }}'

- name: Configuring...
  become: true
  become_user: root
  ansible.builtin.command: '{{ emacs_build_src_dir }}/configure --with-x=no'
  args:
    chdir: '{{ emacs_build_src_dir }}'
    creates: '{{ emacs_build_src_dir }}/Makefile'

- name: Building...
  become: true
  become_user: root
  ansible.builtin.command: make
  args:
    chdir: '{{ emacs_build_src_dir }}'
    creates: '{{ emacs_build_src_dir }}/src/emacs'

- name: Installing...
  become: true
  become_user: root
  ansible.builtin.command: make install
  args:
    chdir: '{{ emacs_build_src_dir }}'
    creates: /usr/local/bin/emacs

- name: Cleanup...
  become: true
  become_user: root
  ansible.builtin.file:
    path:
      - '{{ emacs_build_src_dir }}'
      - '{{ emacs_build_tmp_tgz }}'
    state: absent
